## Authentication
# Pasis Money Transfer – Authentication  

Pasis uses JWT tokens to authenticate all API requests.  
Tokens are generated when you log in to the Pasis dashboard and create an application.  
Every request must include the token in the Authorization header.  

---

##  What is an Application?  

An application is how developers or businesses connect to the Pasis Money Transfer system via API.  

When you create an application in the Pasis dashboard:  
- You can assign privileges (e.g.,read-only, read & write, Pay, or Payup).  
- A `client_id` and `client_secret` pair will be generated.  
- The `client_secret` is shown only once after creation — make sure you copy and store it securely.  

---

## Authenticate an Application  

Path

Request Headers 

| Field        | Type   | Description           |
|--------------|--------|-----------------------|
| Accept       | string | application/json      |
| Content-Type | string | application/json      |

Request Body

| Field         | Type   | Description                          |
|---------------|--------|--------------------------------------|
| client_id     | string | The client_id of the application     |
| client_secret | string | The client_secret of the application |

Example Request 
```bash
curl --location --request POST 'https://api.pasis.rw/auth/agents/authorize' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data-raw '{
  "client_id": "xxxxx-xxxx-xxxx-xxxx-xxxxxxx",
  "client_secret": "xxxxxxxxxxxxxxxxxxxx"
}'
Example Response
{
  "access": "xxxxxxxxxxxxxxxxxxxx",
  "refresh": "xxxxxxxxxxxxxxxxxxxx",
  "expires": "3600"
}
Refresh an Access Token

Since access tokens expire (e.g., after 15 minutes), you can use the refresh token to generate a new one without logging in again.

Path
${BASE_URL}/auth/agents/refresh/{refresh_token}
| Field        | Type   | Description      |
| ------------ | ------ | ---------------- |
| Accept       | string | application/json |
| Content-Type | string | application/json |
Example Response
{
  "access": "xxxxxxxxxxxxxxxxxxxx",
  "refresh": "xxxxxxxxxxxxxxxxxxxx",
  "expires": "3600"
}
